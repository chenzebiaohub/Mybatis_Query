<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.demo.model.Student">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="score" jdbcType="DOUBLE" property="score" />
    <result column="class_id" jdbcType="VARCHAR" property="classId" />
    <association property="aClass" column="class_id"
                 select="com.demo.dao.ClassMapper.selectByPrimaryKey" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, score, class_id
  </sql>
  <select id="selectAllStudentsByClassId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from student
    where class_id=#{id}
  </select>
  <select id="selectSomeNoStudents" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from student
    where id in
    <foreach collection="list" index="index" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </select>
  <select id="selectStudents" parameterType="com.demo.model.Student" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from student
    <where>
    <choose>
      <when test="id != null">
        and id = #{id,jdbcType=VARCHAR}
      </when>
      <when test="name != null">
        and `name` = #{name,jdbcType=VARCHAR}
      </when>
      <when test="score != null">
        and score = #{score,jdbcType=DOUBLE}
      </when>
      <when test="classId != null">
        and class_id = #{classId,jdbcType=VARCHAR}
      </when>
    </choose>
    </where>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from student
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.demo.model.Student" >
    insert into student (id,`name`, score, class_id
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{score,jdbcType=DOUBLE}, #{classId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.demo.model.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="classId != null">
        class_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.model.Student">
    update student
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.model.Student">
    update student
    set `name` = #{name,jdbcType=VARCHAR},
      score = #{score,jdbcType=DOUBLE},
      class_id = #{classId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>